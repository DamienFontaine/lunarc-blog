// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/DamienFontaine/lunarc-blog/service (interfaces: IUserService)

package mock

import (
	model "github.com/DamienFontaine/lunarc-blog/model"
	security "github.com/DamienFontaine/lunarc/security"
	gomock "github.com/golang/mock/gomock"
)

// Mock of IUserService interface
type MockIUserService struct {
	ctrl     *gomock.Controller
	recorder *_MockIUserServiceRecorder
}

// Recorder for MockIUserService (not exported)
type _MockIUserServiceRecorder struct {
	mock *MockIUserService
}

func NewMockIUserService(ctrl *gomock.Controller) *MockIUserService {
	mock := &MockIUserService{ctrl: ctrl}
	mock.recorder = &_MockIUserServiceRecorder{mock}
	return mock
}

func (_m *MockIUserService) EXPECT() *_MockIUserServiceRecorder {
	return _m.recorder
}

func (_m *MockIUserService) Add(_param0 model.User) (model.User, error) {
	ret := _m.ctrl.Call(_m, "Add", _param0)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIUserServiceRecorder) Add(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0)
}

func (_m *MockIUserService) Delete(_param0 model.User) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIUserServiceRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockIUserService) FindAll() ([]model.User, error) {
	ret := _m.ctrl.Call(_m, "FindAll")
	ret0, _ := ret[0].([]model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIUserServiceRecorder) FindAll() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindAll")
}

func (_m *MockIUserService) Get(_param0 string, _param1 string) (security.User, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1)
	ret0, _ := ret[0].(security.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIUserServiceRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}

func (_m *MockIUserService) GetByID(_param0 string) (model.User, error) {
	ret := _m.ctrl.Call(_m, "GetByID", _param0)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIUserServiceRecorder) GetByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetByID", arg0)
}

func (_m *MockIUserService) Update(_param0 string, _param1 model.User) error {
	ret := _m.ctrl.Call(_m, "Update", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIUserServiceRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update", arg0, arg1)
}
